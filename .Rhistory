ending <- gsub(".*(?<=@)(.*)","\\1",c("s.ustinchenko@govukr.net","sdfsd@sdds sdsd"),perl=TRUE)
ending <-gsub("[ ]",".",ending)
p <- readLines("Київ, Київський національний університет.csv")                      ##in "..." path (full if necessary) to your .csv file
intro_matrix <- sapply(p[2:length(p)], function(input){return(convert(input))})     ##convert set of strings to matrix
convert <- function(input){
return(iconv(unlist(strsplit(input,split=";")),from="utf-8",to="windows-1251"))
}
p <- readLines("Київ, Київський національний університет.csv")                      ##in "..." path (full if necessary) to your .csv file
intro_matrix <- sapply(p[2:length(p)], function(input){return(convert(input))})     ##convert set of strings to matrix
colnames(intro_matrix) <- NULL                                                      ##remove garbage column names
intro_matrix <- gsub(pattern = "\"",replacement = "",intro_matrix)                  ##remove \" on ends of strings
intro_matrix <- t(intro_matrix)                                                     ##transpose matrix
intro_frame <- as.data.frame(intro_matrix,stringsAsFactors = FALSE)                 ##convert matrix to dataframe
names(intro_frame) <- c("time","name","phone","email","age","tech","background","expirience","languages")
ending <- gsub(".*(?<=@)(.*)","\\1",input$email,perl=TRUE)
ending <- gsub("[ ,]",".",ending)
for(i in 1:length(ending)) {input$email[i] <- sub(".*(?<=@)(.*)",ending[i],input$email[i],perl=TRUE)}
for(i in 1:length(ending)) {intro_frame$email[i] <- sub(".*(?<=@)(.*)",ending[i],intro_frame$email[i],perl=TRUE)}
intro_frame$email
library(dplyr)
input <- getData()
source('~/CS50.R')
email_row <- unlist(strsplit(intro_frame$email, split = "@"))
mutate(intro_frame, email_name = email_row[seq(1,length(email_row),by=2)])
email_name <- email_row[seq(1,length(email_row),by=2)]              #lar888
email_domain <- email_row[seq(2,length(email_row),by=2)]            #lawfirmsofiya.kiev.ua
email_domain_zone <- sub(".*\\.(.*?)","\\1",email_domain)           #gov.ua
email_domain_zone_global <- sub(".*\\.([^.]*)","\\1",email_domain)  #com
length(email_name)
length(email_domain)
length(email_domain_zone)
length(email_domain_zone_global)
length(email_row)
emailCorrection <- function(input){
input$email[input$email=="s.ustinchenko@ukr net"] <- "s.ustinchenko@ukr.net"                                  #hardcoded. revise.
input$email[input$email=="sokolova.halen2010.yandex.com.ua"] <- "sokolova.halen2010@yandex.com.ua"            #hardcoded. revise.
input$email <- gsub(" ","",input$email)                                                                       #get rid of spaces
input$email <- gsub("i,ua$","i.ua",input$email)                                                               #hardcoded. revise.
input$email <- gsub("ilcoud\\.com$","icloud.com",input$email)                                                 #correction of icloud
input$email <- gsub("yhoo\\.com$","yahoo.com",input$email)                                                    #correction of yahoo
input$email <- gsub("(gamail\\.com)$|(gamil\\.com)$|(gmial\\.com)$|(ymail\\.com)$","gmail.com",input$email)   #correction of gmail
return(input)
}
intro_frame <- emailCorrection(intro_frame)
email_row <- unlist(strsplit(intro_frame$email, split = "@"))
length(email_row)
mutate(input, email_name = email_row[seq(1,length(email_row),by=2)])
mutate(intro_frame, email_name = email_row[seq(1,length(email_row),by=2)])
email_list <- strsplit(input$email, split = "@")
email_list <- strsplit(intro_frame$email, split = "@")
sapply(email_list,length)
email_list[1]
email_list[2]
intro_frame <- getData()
getData <- function(){
p <- readLines("Київ, Київський національний університет.csv")                      ##in "..." path (full if necessary) to your .csv file
intro_matrix <- sapply(p[2:length(p)], function(input){return(convert(input))})     ##convert set of strings to matrix
colnames(intro_matrix) <- NULL                                                      ##remove garbage column names
intro_matrix <- gsub(pattern = "\"",replacement = "",intro_matrix)                  ##remove \" on ends of strings
intro_matrix <- t(intro_matrix)                                                     ##transpose matrix
intro_frame <- as.data.frame(intro_matrix,stringsAsFactors = FALSE)                 ##convert matrix to dataframe
names(intro_frame) <- c("time","name","phone","email","age","tech","background","expirience","languages")
intro_frame$age <- as.numeric(intro_frame$age)
return(intro_frame)
}
intro_frame <- getData()
intro_frame <- emailCorrection(intro_frame)
input <- getData((0))
input <- getData()
input <- emailCorrection(input)
email_row <- unlist(strsplit(input$email, split = "@"))             #preparation
length(email_row)
mutate(input, email_name = email_row[seq(1,length(email_row),by=2)])
names(x = input)
phoneCorrection <- function(input){
input$phone <- gsub("[ ()-]+","",input$phone)
input$phone <- gsub("^\\+?3?8","",input$phone)
return(input)
}
input <- phoneCorrection(input)
sapply(input$phone,nchar)
table(sapply(input$phone,nchar))
source('~/CS50.R')
phoneExtract <- function(input){
phone_code <- sapply(input$phone, function(phone){
if(nchar(phone)==10){return(substring(phone,1,3))}
else{return("000")}
})
phone_operator <- switch (phone_code,
"000" = "Invalid",
"050" = "MTC","066" = "MTC","095" = "MTC","099" = "MTC",
"067" = "Kyivstar","068" = "Kyivstar","096" = "Kyivstar","097" = "Kyivstar","098" = "Kyivstar",
"063" = "Life", "073" = "Life", "093" = "Life",
"091" = "Utel",
"092" = "PeopleNet",
"094" = "Intertelecom"
)
phone_operator[is.null(phone_operator)] <- "Unknown"
input <- mutate(input, phone_operator = phone_operator)
return(input)
}
input <- phoneCorrection(input)
input <- phoneExtract(input)
phoneExtract <- function(input){
phone_code <- sapply(input$phone, function(phone){
if(nchar(phone)==10){return(substring(phone,1,3))}
else{return("000")}
})
phone_operator <- sapply(phone_code, function(code){
return(
switch (code,
"000" = "Invalid",
"050" = "MTC","066" = "MTC","095" = "MTC","099" = "MTC",
"063" = "Life", "073" = "Life", "093" = "Life",
"067" = "Kyivstar","068" = "Kyivstar","096" = "Kyivstar","097" = "Kyivstar","098" = "Kyivstar",
"091" = "Utel",
"092" = "PeopleNet",
"094" = "Intertelecom"
)
)
})
phone_operator[is.null(phone_operator)] <- "Unknown"
input <- mutate(input, phone_operator = phone_operator)
return(input)
}
input <- phoneExtract(input)
names(input)
str(input$phone_operator)
table(input$phone_operator)
summary(input$phone_operator)
class(input$phone_operator)
input$phone_operator[[1]]
input$phone_operator[1]
unique(unlist(input$phone_operator))
source('~/CS50.R')
phoneExtract <- function(input){
phone_code <- sapply(input$phone, function(phone){
if(nchar(phone)==10){return(substring(phone,1,3))}
else{return("000")}
})
phone_operator <- sapply(phone_code, function(code){
return(
switch (code,
"000" = "Invalid",
"050" = "MTC","066" = "MTC","095" = "MTC","099" = "MTC",
"067" = "Kyivstar","068" = "Kyivstar","096" = "Kyivstar","097" = "Kyivstar","098" = "Kyivstar",
"063" = "Life", "073" = "Life", "093" = "Life",
"091" = "Utel",
"092" = "PeopleNet",
"094" = "Intertelecom"
)
)
})
phone_operator[is.null(phone_operator)] <- "Unknown"
input <- mutate(input, phone_operator = unlist(phone_operator))
return(input)
}
input <- getData()
input <- phoneCorrection(input)
input <- phoneExtract(input)
phoneExtract <- function(input){
phone_code <- sapply(input$phone, function(phone){
if(nchar(phone)==10){return(substring(phone,1,3))}
else{return("000")}
})
phone_operator <- sapply(phone_code, function(code){
return(
switch (code,
"000" = "Invalid",
"050" = "MTC","066" = "MTC","095" = "MTC","099" = "MTC",
"067" = "Kyivstar","068" = "Kyivstar","096" = "Kyivstar","097" = "Kyivstar","098" = "Kyivstar",
"091" = "Utel",
"092" = "PeopleNet",
"094" = "Intertelecom"
)
"063" = "Life", "073" = "Life", "093" = "Life",
)
})
phone_operator <- unlist(phone_operator)
phone_operator[is.null(phone_operator)] <- "Unknown"
input <- mutate(input, phone_operator = phone_operator)
return(input)
}
phoneExtract <- function(input){
phone_code <- sapply(input$phone, function(phone){
if(nchar(phone)==10){return(substring(phone,1,3))}
else{return("000")}
})
phone_operator <- sapply(phone_code, function(code){
return(
switch (code,
"000" = "Invalid",
"050" = "MTC","066" = "MTC","095" = "MTC","099" = "MTC",
"067" = "Kyivstar","068" = "Kyivstar","096" = "Kyivstar","097" = "Kyivstar","098" = "Kyivstar",
"063" = "Life", "073" = "Life", "093" = "Life",
"091" = "Utel",
"092" = "PeopleNet",
"094" = "Intertelecom"
)
)
})
phone_operator <- unlist(phone_operator)
phone_operator[is.null(phone_operator)] <- "Unknown"
input <- mutate(input, phone_operator = phone_operator)
return(input)
}
names(input)
input <- phoneExtract(input)
phone_code <- sapply(input$phone, function(phone){
if(nchar(phone)==10){return(substring(phone,1,3))}
else{return("000")}
})
length(phone_code)
phone_operator <- sapply(phone_code, function(code){
return(
switch (code,
"000" = "Invalid",
"050" = "MTC","066" = "MTC","095" = "MTC","099" = "MTC",
"067" = "Kyivstar","068" = "Kyivstar","096" = "Kyivstar","097" = "Kyivstar","098" = "Kyivstar",
"063" = "Life", "073" = "Life", "093" = "Life",
"091" = "Utel",
"092" = "PeopleNet",
"094" = "Intertelecom"
)
)
})
length(phone_operator)
phone_operator <- unlist(phone_operator)
length(phone_operator)
phone_operator <- sapply(phone_code, function(code){
return(
switch (code,
"000" = "Invalid",
"050" = "MTC","066" = "MTC","095" = "MTC","099" = "MTC",
"067" = "Kyivstar","068" = "Kyivstar","096" = "Kyivstar","097" = "Kyivstar","098" = "Kyivstar",
"063" = "Life", "073" = "Life", "093" = "Life",
"091" = "Utel",
"092" = "PeopleNet",
"094" = "Intertelecom"
)
)
})
phone_operator[is.null(phone_operator)] <- "Unknown"
length(phone_operator)
length(unlist(phone_operator))
is.null(phone_operator)
phone_operator <- sapply(phone_code, function(code){
switch (code,
"000" = "Invalid",
"050" = "MTC","066" = "MTC","095" = "MTC","099" = "MTC",
"067" = "Kyivstar","068" = "Kyivstar","096" = "Kyivstar","097" = "Kyivstar","098" = "Kyivstar",
"063" = "Life", "073" = "Life", "093" = "Life",
"091" = "Utel",
"092" = "PeopleNet",
"094" = "Intertelecom"
)
})
class(phone_operator)
length(phone_operator)
length(unlist(phone_operator))
phone_operator <- sapply(phone_code, function(code){
switch (code,
"050" = "MTC","066" = "MTC","095" = "MTC","099" = "MTC",
"067" = "Kyivstar","068" = "Kyivstar","096" = "Kyivstar","097" = "Kyivstar","098" = "Kyivstar",
"063" = "Life", "073" = "Life", "093" = "Life",
"000" = "Invalid",
"091" = "Utel",
"092" = "PeopleNet",
"094" = "Intertelecom"
)
})
for(i in 1:length(phone_operator)){if(is.null(phone_operator[i])){phone_operator[i]<-"Unknown"}}
phone_operator <- unlist(phone_operator)
input <- mutate(input, phone_operator = phone_operator)
length(phone_operator)
phone_operator <- sapply(phone_code, function(code){
switch (code,
"000" = "Invalid",
"050" = "MTC","066" = "MTC","095" = "MTC","099" = "MTC",
"067" = "Kyivstar","068" = "Kyivstar","096" = "Kyivstar","097" = "Kyivstar","098" = "Kyivstar",
"063" = "Life", "073" = "Life", "093" = "Life",
"091" = "Utel",
"092" = "PeopleNet",
"094" = "Intertelecom"
)
})
phone_operator
for(i in 1:length(phone_operator)){if(is.null(phone_operator[i])){phone_operator[i]<-"Unknown"}}
phone_operator
phone_operator$6766500165
phone_operator$676`6766500165`
phone_operator$6766500165`
phone_operator$`6766500165`
for(i in 1:length(phone_operator)){if(is.null(phone_operator[[i]])){phone_operator[[i]]<-"Unknown"}}
phone_operator$`6766500165`
phone_operator <- unlist(phone_operator)
length(phone_operator)
input <- mutate(input, phone_operator = phone_operator)
table(input$phone_operator)
temp <- table(input$phone_operator)
temp[temp>20]
pie(temp[temp>20])
class(input$phone_operator)
source('~/CS50.R')
source('~/CS50.R')
source('C:/Projects/CS50.R')
source('C:/Projects/CS50.R')
source('C:/Projects/CS50.R')
processAndSave()
source('C:/Projects/CS50.R')
processAndSave()
5050*5
5050*5+7050
library(xgboost)
library(Matrix)
setwd("C:\\Users\\Константин\\Documents")
train <- read.csv('train.csv',stringsAsFactors = FALSE)
train
train <- read.csv('train.csv',sep = ",",skip = 1,stringsAsFactors = FALSE)
train
train <- read.csv('train.csv',sep = ",",skip = 1,stringsAsFactors = FALSE,col.names = FALSE)
dim(train)
train
train <- read.csv('train.csv',sep = ",",skip = 1,stringsAsFactors = FALSE,col.names = NULL)
train <- read.csv('train.csv',sep = ",",stringsAsFactors = FALSE,col.names = NA)
train
train <- readLines("train.csv")
train
train_db <- split(train, split=",")
train_db <- strsplit(train, split=",")
train_db
101/159
source('~/calculations.R')
source('C:/Users/Константин/Videos/Desktop/temp/calculations.R')
source('C:/Users/Константин/Videos/Desktop/temp/calculations.R')
a <- generateFrame()
a
source('C:/Users/Константин/Videos/Desktop/temp/calculations.R')
a <- generateFrame()
a
class(a[,1])
a
a$r/a$total
sapply(a[,3:7],function(x){return(x/a$total)})
class(sapply(a[,3:7],function(x){return(x/a$total)}))
b <- as.data.frame(sapply(a[,3:7],function(x){return(x/a$total)}))
b
class(b[,1])
ls()
a
b
b^2
(1-b)^2
meanRel <- getMeanRel(data)
mult1 <- meanRel*meanRel
source('C:/Users/Константин/Videos/Desktop/temp/calculations.R')
meanRel <- getMeanRel(data)
mult1 <- meanRel*meanRel
data <- generateFrame(
)
meanRel <- getMeanRel(data)
mult1 <- meanRel*meanRel
mult2 <- (1-meanRel)*(1-meanRel)
data[,3:7]*mult1
add1 <- mult1*data[,3:7]
add1
add2 <- mult2*(data$total-data[,3:7])
add2
data$total-data[,3:7]
meanRel <- getMeanRel(data)
mult1 <- meanRel*meanRel
mult2 <- (1-meanRel)*(1-meanRel)
add1 <- mult1*data[,3:7]
add2 <- mult2*(data$distr-data[,3:7])
res <- sqrt((add1+add2)/data$distr)
res
meanRel
add1
add2
data$distr-data[,3:7]
meanRel <- getMeanRel(data)
mult2 <- (1-meanRel)*(1-meanRel)
mult1 <- meanRel*meanRel
add1 <- mult1*(data$distr-data[,3:7])
add2 <- mult2*data[,3:7]
res <- sqrt((add1+add2)/data$distr)
res
confint(object = data, parm = data$r)
confint(, parm = data$r)
confint(data$distr[1]~data$r[1])
confint(fit(data$distr[1]~data$r[1]))
confint(fit.lm(data$distr[1]~data$r[1]))
confint(lm.fit(data$distr[1]~data$r[1]))
qt(p = 0.95)
qt(p = 0.95,df=4)
qt(p = 0.95,df=1)
pt(q = 0.95)
pt(q = 0.95,df=1)
pt(q = 0.95,df=2)
qt(q = 0.95,df=1)
qt(p = 0.95,df=1)
dt(x = 0.95,df=1)
qt(0.975,df=2)
qt(0.975,df=1)
qt(0.975,df=3)
qt(0.95,df=3)
qt(0.95,df=10)
qt(0.95,df=12)
qt(0.95,df=13)
qt(0.95,df=111)
source('C:/Users/Константин/Videos/Desktop/temp/calculations.R')
source(".\\getData.R")
library(RMySQL)
db <- "dfr0gccu00ttbf"
host <- "ec2-50-16-218-45.compute-1.amazonaws.com"
user <- "wmfkzsrzatnpzn"
port <- "5432"
rm(list=ls())
db <- "dfr0gccu00ttbf"
host <- "ec2-50-16-218-45.compute-1.amazonaws.com"
user <- "wmfkzsrzatnpzn"
port <- "5432"
pass <- "ba4mzsZTukJpJ3fsU-7k77G75_"
url <- "postgres://wmfkzsrzatnpzn:ba4mzsZTukJpJ3fsU-7k77G75_@ec2-50-16-218-45.compute-1.amazonaws.com:5432/dfr0gccu00ttbf"
library(RPostgreSQL)
con <- RPostgreSQL::dbConnect(PostrgeSQL(), dbname=db, username=user, password=pass, host=host, port=port, url=url)
con <- RPostgreSQL::dbConnect(Postrges(), dbname=db, username=user, password=pass, host=host, port=port, url=url)
con <- RPostgreSQL::dbConnect(RPostgreSQL::PostgreSQL(), dbname=db, username=user, password=pass, host=host, port=port, url=url)
con <- RPostgreSQL::dbConnect(RPostgreSQL::PostgreSQL(), dbname=db, username=user, password=pass, host=host, port=port)
con <- RPostgreSQL::dbConnect(RPostgreSQL::PostgreSQL(), dbname=db, user=user, password=pass, host=host, port=port)
con <- RPostgreSQL::dbConnect(RPostgreSQL::PostgreSQL(), dbname=db, user=user, password=pass, host=as.integer(host), port=port)
con <- RPostgreSQL::dbConnect(RPostgreSQL::PostgreSQL(), dbname=db, user=user, password=pass, host=as.numeric(host), port=port)
con <- RPostgreSQL::dbConnect(RPostgreSQL::PostgreSQL(), dbname=db, user=user, password=pass, host=host, port=as.integer(port))
con <- RPostgreSQL::dbConnect(RPostgreSQL::PostgreSQL(), dbname=db, user=user, password=pass, host=host)
conn <- RPostgreSQL::dbConnect(RPostgreSQL::PostgreSQL(), dbname=db, user=user, password=pass, host=host)
conn <- RPostgreSQL::dbConnect(RPostgreSQL::PostgreSQL(), user=user, password=pass, host=host)
conn <- RPostgreSQL::dbConnect(RPostgreSQL::PostgreSQL(), user=user, password=pass, host=url)
conn <- RPostgreSQL::dbConnect(RPostgreSQL::PostgreSQL(), user=user, password=pass)
conn <- RPostgreSQL::dbConnect(RPostgreSQL::PostgreSQL())
conn <- RPostgreSQL::dbConnect()
conn <- RPostgreSQL::dbConnect(RPostgreSQL::PostgreSQL())
require("RPostgreSQL")
pw <- "ba4mzsZTukJpJ3fsU-7k77G75_"
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "postgres",
host = host, port = 5432,
user = user, password = pass)
rm(pw)
# check for the cartable
dbExistsTable(con, "cartable")
library(RPostgreSQL)
host <- "ec2-50-16-218-45.compute-1.amazonaws.com"
db <- "dfr0gccu00ttbf"
user <- "wmfkzsrzatnpzn"
port <- 5432
pwd <- "ba4mzsZTukJpJ3fsU-7k77G75_"
url <- "postgres://wmfkzsrzatnpzn:ba4mzsZTukJpJ3fsU-7k77G75_@ec2-50-16-218-45.compute-1.amazonaws.com:5432/dfr0gccu00ttbf"
conn <- dbConnect(RPostgreSQL::PostgreSQL(),host=host, username=user, password=pwd)
conn <- dbConnect(RPostgreSQL::PostgreSQL(),host=host, user=user, password=pwd)
conn <- dbConnect(RPostgreSQL::PostgreSQL(),host=host, user=user, password=pwd, port=port)
conn <- dbConnect(RPostgreSQL::PostgreSQL(),host=host, user=user, password=pwd, port=port, url=url)
conn <- dbConnect(RPostgreSQL::PostgreSQL(),host=url, user=user, password=pwd, port=port)
conn <- dbConnect(RPostgreSQL::PostgreSQL(),host=host, user=user, password=pwd, port=port)
conn <- dbConnect(RPostgreSQL::PostgreSQL(),host=host, user=user, password=pwd, port=port, dbname=db)
conn <- dbConnect(RPostgreSQL::PostgreSQL(),host=url, user=user, password=pwd, port=port, dbname=db)
conn <- dbConnect(RPostgreSQL::PostgreSQL(),host=host, user=user, password=pwd, port=port, dbname=db)
conn <- dbConnect(RPostgreSQL::PostgreSQL(),host="ec2-50-16-218-45.compute-1.amazonaws.com", user=user, password=pwd, port=port, dbname=db)
conn <- dbConnect(RPostgreSQL::PostgreSQL(),host="compute-1.amazonaws.com", user=user, password=pwd, port=port, dbname=db)
conn <- dbConnect(RPostgreSQL::PostgreSQL(),host="ec2-50-16-218-45.compute-1.amazonaws.com", user=user, password=pwd, port=port, dbname=db)
setwd("C:/Projects/x")
source(file = "df.Rdmped")
source('C:/Projects/x/knuvk.R')
a <- loadPosts()
require(httr)
source('C:/Projects/x/knuvk.R')
a <- loadPosts()
debug(loadPosts)
a <- loadPosts()
debug(loadPosts)
a <- loadPosts()
source('C:/Projects/x/knuvk.R')
a <- loadPosts()
a <- loadPosts()
debug(loadPosts)
a <- loadPosts()
a <- loadPosts()
res
GET("https://api.vk.com/method/wall.get?owner_id=-100567023&count=100&offset=0&user_id=30493389&v=5.52&access_token=5642f50b31d8bd267d71a7d81a05b7853493421931e29cc01502c46b995bfd6f5c54737ecc454c604b093")
source('C:/Projects/x/knuvk.R')
a <- loadPosts()
debug(loadPosts)
a <- loadPosts()
res
source('C:/Projects/x/knuvk.R')
a <- loadPosts()
debug(loadPosts)
a <- loadPosts()
reqstring
res[1]
res[1] <- GET(reqstring)
res[1]
res[[1]] <- GET(reqstring)
res[[1]]
a <- loadPosts()
source('C:/Projects/x/knuvk.R')
a <- loadPosts()
source('C:/Projects/x/knuvk.R')
a <- loadPosts()
a
debug(loadPosts)
a <- loadPosts()
a <- loadPosts()
